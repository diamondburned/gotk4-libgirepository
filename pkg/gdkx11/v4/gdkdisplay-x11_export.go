// Code generated by girgen. DO NOT EDIT.

package gdkx11

import (
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #cgo pkg-config: gobject-2.0
// #include <stdlib.h>
// #include <glib.h>
// #include <glib-object.h>
import "C"

//export _gotk4_gdkx114_X11Display_ConnectXevent
func _gotk4_gdkx114_X11Display_ConnectXevent(arg0 C.gpointer, arg1 C.gpointer, arg2 C.guintptr) (cret C.gboolean) {
	var f func(xevent unsafe.Pointer) (ok bool)
	{
		closure := coreglib.ConnectedGeneratedClosure(uintptr(arg2))
		if closure == nil {
			panic("given unknown closure user_data")
		}
		defer closure.TryRepanic()

		f = closure.Func.(func(xevent unsafe.Pointer) (ok bool))
	}

	var _xevent unsafe.Pointer // out

	_xevent = (unsafe.Pointer)(unsafe.Pointer(arg1))

	ok := f(_xevent)

	var _ bool

	if ok {
		cret = C.TRUE
	}

	return cret
}
