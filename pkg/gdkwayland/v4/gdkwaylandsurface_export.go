// Code generated by girgen. DO NOT EDIT.

package gdkwayland

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gbox"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #cgo pkg-config: gobject-2.0
// #include <stdlib.h>
// #include <glib.h>
// #include <glib-object.h>
import "C"

//export _gotk4_gdkwayland4_WaylandToplevelExported
func _gotk4_gdkwayland4_WaylandToplevelExported(arg1 *C.void, arg2 *C.char, arg3 C.gpointer) {
	var fn WaylandToplevelExported
	{
		v := gbox.Get(uintptr(arg3))
		if v == nil {
			panic(`callback not found`)
		}
		fn = v.(WaylandToplevelExported)
	}

	var _toplevel *WaylandToplevel // out
	var _handle string             // out

	_toplevel = wrapWaylandToplevel(coreglib.Take(unsafe.Pointer(arg1)))
	_handle = C.GoString((*C.gchar)(unsafe.Pointer(arg2)))

	fn(_toplevel, _handle)
}
