// Code generated by girgen. DO NOT EDIT.

package gio

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	"github.com/diamondburned/gotk4/pkg/core/girepository"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #cgo pkg-config: gobject-2.0
// #include <stdlib.h>
// #include <glib.h>
// #include <glib-object.h>
import "C"

// GType values.
var (
	GTypeZlibDecompressor = coreglib.Type(girepository.MustFind("Gio", "ZlibDecompressor").RegisteredGType())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeZlibDecompressor, F: marshalZlibDecompressor},
	})
}

// ZlibDecompressorOverrides contains methods that are overridable.
type ZlibDecompressorOverrides struct {
}

func defaultZlibDecompressorOverrides(v *ZlibDecompressor) ZlibDecompressorOverrides {
	return ZlibDecompressorOverrides{}
}

// ZlibDecompressor: zlib decompression.
type ZlibDecompressor struct {
	_ [0]func() // equal guard
	*coreglib.Object

	Converter
}

var (
	_ coreglib.Objector = (*ZlibDecompressor)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*ZlibDecompressor, *ZlibDecompressorClass, ZlibDecompressorOverrides](
		GTypeZlibDecompressor,
		initZlibDecompressorClass,
		wrapZlibDecompressor,
		defaultZlibDecompressorOverrides,
	)
}

func initZlibDecompressorClass(gclass unsafe.Pointer, overrides ZlibDecompressorOverrides, classInitFunc func(*ZlibDecompressorClass)) {
	if classInitFunc != nil {
		class := (*ZlibDecompressorClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapZlibDecompressor(obj *coreglib.Object) *ZlibDecompressor {
	return &ZlibDecompressor{
		Object: obj,
		Converter: Converter{
			Object: obj,
		},
	}
}

func marshalZlibDecompressor(p uintptr) (interface{}, error) {
	return wrapZlibDecompressor(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// ZlibDecompressorClass: instance of this type is always passed by reference.
type ZlibDecompressorClass struct {
	*zlibDecompressorClass
}

// zlibDecompressorClass is the struct that's finalized.
type zlibDecompressorClass struct {
	native unsafe.Pointer
}

var GIRInfoZlibDecompressorClass = girepository.MustFind("Gio", "ZlibDecompressorClass")
