// Code generated by girgen. DO NOT EDIT.

package gio

import (
	"fmt"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/girepository"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #cgo pkg-config: gobject-2.0
// #include <stdlib.h>
// #include <glib.h>
// #include <glib-object.h>
import "C"

// GType values.
var (
	GTypeNotificationPriority = coreglib.Type(girepository.MustFind("Gio", "NotificationPriority").RegisteredGType())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeNotificationPriority, F: marshalNotificationPriority},
	})
}

// NotificationPriority: priority levels for #GNotifications.
type NotificationPriority C.gint

const (
	// NotificationPriorityNormal: default priority, to be used for the majority
	// of notifications (for example email messages, software updates, completed
	// download/sync operations).
	NotificationPriorityNormal NotificationPriority = iota
	// NotificationPriorityLow: for notifications that do not require immediate
	// attention - typically used for contextual background information, such as
	// contact birthdays or local weather.
	NotificationPriorityLow
	// NotificationPriorityHigh: for events that require more attention, usually
	// because responses are time-sensitive (for example chat and SMS messages
	// or alarms).
	NotificationPriorityHigh
	// NotificationPriorityUrgent: for urgent notifications, or notifications
	// that require a response in a short space of time (for example phone calls
	// or emergency warnings).
	NotificationPriorityUrgent
)

func marshalNotificationPriority(p uintptr) (interface{}, error) {
	return NotificationPriority(coreglib.ValueFromNative(unsafe.Pointer(p)).Enum()), nil
}

// String returns the name in string for NotificationPriority.
func (n NotificationPriority) String() string {
	switch n {
	case NotificationPriorityNormal:
		return "Normal"
	case NotificationPriorityLow:
		return "Low"
	case NotificationPriorityHigh:
		return "High"
	case NotificationPriorityUrgent:
		return "Urgent"
	default:
		return fmt.Sprintf("NotificationPriority(%d)", n)
	}
}
