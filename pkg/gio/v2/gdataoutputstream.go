// Code generated by girgen. DO NOT EDIT.

package gio

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	"github.com/diamondburned/gotk4/pkg/core/girepository"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #cgo pkg-config: gobject-2.0
// #include <stdlib.h>
// #include <glib.h>
// #include <glib-object.h>
import "C"

// GType values.
var (
	GTypeDataOutputStream = coreglib.Type(girepository.MustFind("Gio", "DataOutputStream").RegisteredGType())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeDataOutputStream, F: marshalDataOutputStream},
	})
}

// DataOutputStreamOverrides contains methods that are overridable.
type DataOutputStreamOverrides struct {
}

func defaultDataOutputStreamOverrides(v *DataOutputStream) DataOutputStreamOverrides {
	return DataOutputStreamOverrides{}
}

// DataOutputStream: data output stream implements Stream and includes functions
// for writing data directly to an output stream.
type DataOutputStream struct {
	_ [0]func() // equal guard
	FilterOutputStream

	Seekable
}

var (
	_ FilterOutputStreamer = (*DataOutputStream)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*DataOutputStream, *DataOutputStreamClass, DataOutputStreamOverrides](
		GTypeDataOutputStream,
		initDataOutputStreamClass,
		wrapDataOutputStream,
		defaultDataOutputStreamOverrides,
	)
}

func initDataOutputStreamClass(gclass unsafe.Pointer, overrides DataOutputStreamOverrides, classInitFunc func(*DataOutputStreamClass)) {
	if classInitFunc != nil {
		class := (*DataOutputStreamClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapDataOutputStream(obj *coreglib.Object) *DataOutputStream {
	return &DataOutputStream{
		FilterOutputStream: FilterOutputStream{
			OutputStream: OutputStream{
				Object: obj,
			},
		},
		Seekable: Seekable{
			Object: obj,
		},
	}
}

func marshalDataOutputStream(p uintptr) (interface{}, error) {
	return wrapDataOutputStream(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// DataOutputStreamClass: instance of this type is always passed by reference.
type DataOutputStreamClass struct {
	*dataOutputStreamClass
}

// dataOutputStreamClass is the struct that's finalized.
type dataOutputStreamClass struct {
	native unsafe.Pointer
}

var GIRInfoDataOutputStreamClass = girepository.MustFind("Gio", "DataOutputStreamClass")
