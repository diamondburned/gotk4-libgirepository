// Code generated by girgen. DO NOT EDIT.

package gio

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	"github.com/diamondburned/gotk4/pkg/core/girepository"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #cgo pkg-config: gobject-2.0
// #include <stdlib.h>
// #include <glib.h>
// #include <glib-object.h>
import "C"

// GType values.
var (
	GTypeMemoryOutputStream = coreglib.Type(girepository.MustFind("Gio", "MemoryOutputStream").RegisteredGType())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeMemoryOutputStream, F: marshalMemoryOutputStream},
	})
}

// MemoryOutputStreamOverrides contains methods that are overridable.
type MemoryOutputStreamOverrides struct {
}

func defaultMemoryOutputStreamOverrides(v *MemoryOutputStream) MemoryOutputStreamOverrides {
	return MemoryOutputStreamOverrides{}
}

// MemoryOutputStream is a class for using arbitrary memory chunks as output for
// GIO streaming output operations.
//
// As of GLib 2.34, OutputStream trivially implements OutputStream: it always
// polls as ready.
type MemoryOutputStream struct {
	_ [0]func() // equal guard
	OutputStream

	*coreglib.Object
	PollableOutputStream
	Seekable
}

var (
	_ OutputStreamer    = (*MemoryOutputStream)(nil)
	_ coreglib.Objector = (*MemoryOutputStream)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*MemoryOutputStream, *MemoryOutputStreamClass, MemoryOutputStreamOverrides](
		GTypeMemoryOutputStream,
		initMemoryOutputStreamClass,
		wrapMemoryOutputStream,
		defaultMemoryOutputStreamOverrides,
	)
}

func initMemoryOutputStreamClass(gclass unsafe.Pointer, overrides MemoryOutputStreamOverrides, classInitFunc func(*MemoryOutputStreamClass)) {
	if classInitFunc != nil {
		class := (*MemoryOutputStreamClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapMemoryOutputStream(obj *coreglib.Object) *MemoryOutputStream {
	return &MemoryOutputStream{
		OutputStream: OutputStream{
			Object: obj,
		},
		Object: obj,
		PollableOutputStream: PollableOutputStream{
			OutputStream: OutputStream{
				Object: obj,
			},
		},
		Seekable: Seekable{
			Object: obj,
		},
	}
}

func marshalMemoryOutputStream(p uintptr) (interface{}, error) {
	return wrapMemoryOutputStream(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// MemoryOutputStreamClass: instance of this type is always passed by reference.
type MemoryOutputStreamClass struct {
	*memoryOutputStreamClass
}

// memoryOutputStreamClass is the struct that's finalized.
type memoryOutputStreamClass struct {
	native unsafe.Pointer
}

var GIRInfoMemoryOutputStreamClass = girepository.MustFind("Gio", "MemoryOutputStreamClass")
