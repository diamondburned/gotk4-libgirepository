// Code generated by girgen. DO NOT EDIT.

package gio

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	"github.com/diamondburned/gotk4/pkg/core/girepository"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #cgo pkg-config: gobject-2.0
// #include <stdlib.h>
// #include <glib.h>
// #include <glib-object.h>
import "C"

// GType values.
var (
	GTypeBufferedInputStream = coreglib.Type(girepository.MustFind("Gio", "BufferedInputStream").RegisteredGType())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeBufferedInputStream, F: marshalBufferedInputStream},
	})
}

// BufferedInputStreamOverrides contains methods that are overridable.
type BufferedInputStreamOverrides struct {
}

func defaultBufferedInputStreamOverrides(v *BufferedInputStream) BufferedInputStreamOverrides {
	return BufferedInputStreamOverrides{}
}

// BufferedInputStream: buffered input stream implements InputStream and
// provides for buffered reads.
//
// By default, InputStream's buffer size is set at 4 kilobytes.
//
// To create a buffered input stream, use g_buffered_input_stream_new(), or
// g_buffered_input_stream_new_sized() to specify the buffer's size at
// construction.
//
// To get the size of a buffer within a buffered input stream, use
// g_buffered_input_stream_get_buffer_size(). To change the size of a buffered
// input stream's buffer, use g_buffered_input_stream_set_buffer_size(). Note
// that the buffer's size cannot be reduced below the size of the data within
// the buffer.
type BufferedInputStream struct {
	_ [0]func() // equal guard
	FilterInputStream

	Seekable
}

var (
	_ FilterInputStreamer = (*BufferedInputStream)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*BufferedInputStream, *BufferedInputStreamClass, BufferedInputStreamOverrides](
		GTypeBufferedInputStream,
		initBufferedInputStreamClass,
		wrapBufferedInputStream,
		defaultBufferedInputStreamOverrides,
	)
}

func initBufferedInputStreamClass(gclass unsafe.Pointer, overrides BufferedInputStreamOverrides, classInitFunc func(*BufferedInputStreamClass)) {
	if classInitFunc != nil {
		class := (*BufferedInputStreamClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapBufferedInputStream(obj *coreglib.Object) *BufferedInputStream {
	return &BufferedInputStream{
		FilterInputStream: FilterInputStream{
			InputStream: InputStream{
				Object: obj,
			},
		},
		Seekable: Seekable{
			Object: obj,
		},
	}
}

func marshalBufferedInputStream(p uintptr) (interface{}, error) {
	return wrapBufferedInputStream(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// BufferedInputStreamClass: instance of this type is always passed by
// reference.
type BufferedInputStreamClass struct {
	*bufferedInputStreamClass
}

// bufferedInputStreamClass is the struct that's finalized.
type bufferedInputStreamClass struct {
	native unsafe.Pointer
}

var GIRInfoBufferedInputStreamClass = girepository.MustFind("Gio", "BufferedInputStreamClass")
