// Code generated by girgen. DO NOT EDIT.

package gio

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	"github.com/diamondburned/gotk4/pkg/core/girepository"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #cgo pkg-config: gobject-2.0
// #include <stdlib.h>
// #include <glib.h>
// #include <glib-object.h>
import "C"

// GType values.
var (
	GTypeProxyAddress = coreglib.Type(girepository.MustFind("Gio", "ProxyAddress").RegisteredGType())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeProxyAddress, F: marshalProxyAddress},
	})
}

// ProxyAddressOverrides contains methods that are overridable.
type ProxyAddressOverrides struct {
}

func defaultProxyAddressOverrides(v *ProxyAddress) ProxyAddressOverrides {
	return ProxyAddressOverrides{}
}

// ProxyAddress: support for proxied SocketAddress.
type ProxyAddress struct {
	_ [0]func() // equal guard
	InetSocketAddress
}

var (
	_ SocketAddresser = (*ProxyAddress)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*ProxyAddress, *ProxyAddressClass, ProxyAddressOverrides](
		GTypeProxyAddress,
		initProxyAddressClass,
		wrapProxyAddress,
		defaultProxyAddressOverrides,
	)
}

func initProxyAddressClass(gclass unsafe.Pointer, overrides ProxyAddressOverrides, classInitFunc func(*ProxyAddressClass)) {
	if classInitFunc != nil {
		class := (*ProxyAddressClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapProxyAddress(obj *coreglib.Object) *ProxyAddress {
	return &ProxyAddress{
		InetSocketAddress: InetSocketAddress{
			SocketAddress: SocketAddress{
				Object: obj,
				SocketConnectable: SocketConnectable{
					Object: obj,
				},
			},
		},
	}
}

func marshalProxyAddress(p uintptr) (interface{}, error) {
	return wrapProxyAddress(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// ProxyAddressClass class structure for Address.
//
// An instance of this type is always passed by reference.
type ProxyAddressClass struct {
	*proxyAddressClass
}

// proxyAddressClass is the struct that's finalized.
type proxyAddressClass struct {
	native unsafe.Pointer
}

var GIRInfoProxyAddressClass = girepository.MustFind("Gio", "ProxyAddressClass")
