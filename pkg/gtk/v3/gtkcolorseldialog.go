// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/atk"
	"github.com/diamondburned/gotk4/pkg/core/gextras"
	"github.com/diamondburned/gotk4/pkg/core/girepository"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #cgo pkg-config: gobject-2.0
// #include <stdlib.h>
// #include <glib.h>
// #include <glib-object.h>
import "C"

// GType values.
var (
	GTypeColorSelectionDialog = coreglib.Type(girepository.MustFind("Gtk", "ColorSelectionDialog").RegisteredGType())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeColorSelectionDialog, F: marshalColorSelectionDialog},
	})
}

// ColorSelectionDialogOverrides contains methods that are overridable.
type ColorSelectionDialogOverrides struct {
}

func defaultColorSelectionDialogOverrides(v *ColorSelectionDialog) ColorSelectionDialogOverrides {
	return ColorSelectionDialogOverrides{}
}

type ColorSelectionDialog struct {
	_ [0]func() // equal guard
	Dialog
}

var (
	_ Binner = (*ColorSelectionDialog)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*ColorSelectionDialog, *ColorSelectionDialogClass, ColorSelectionDialogOverrides](
		GTypeColorSelectionDialog,
		initColorSelectionDialogClass,
		wrapColorSelectionDialog,
		defaultColorSelectionDialogOverrides,
	)
}

func initColorSelectionDialogClass(gclass unsafe.Pointer, overrides ColorSelectionDialogOverrides, classInitFunc func(*ColorSelectionDialogClass)) {
	if classInitFunc != nil {
		class := (*ColorSelectionDialogClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapColorSelectionDialog(obj *coreglib.Object) *ColorSelectionDialog {
	return &ColorSelectionDialog{
		Dialog: Dialog{
			Window: Window{
				Bin: Bin{
					Container: Container{
						Widget: Widget{
							InitiallyUnowned: coreglib.InitiallyUnowned{
								Object: obj,
							},
							Object: obj,
							ImplementorIface: atk.ImplementorIface{
								Object: obj,
							},
							Buildable: Buildable{
								Object: obj,
							},
						},
					},
				},
			},
		},
	}
}

func marshalColorSelectionDialog(p uintptr) (interface{}, error) {
	return wrapColorSelectionDialog(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// ColorSelectionDialogClass: instance of this type is always passed by
// reference.
type ColorSelectionDialogClass struct {
	*colorSelectionDialogClass
}

// colorSelectionDialogClass is the struct that's finalized.
type colorSelectionDialogClass struct {
	native unsafe.Pointer
}

var GIRInfoColorSelectionDialogClass = girepository.MustFind("Gtk", "ColorSelectionDialogClass")
