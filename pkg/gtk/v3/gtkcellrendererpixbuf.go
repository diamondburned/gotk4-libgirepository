// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	"github.com/diamondburned/gotk4/pkg/core/girepository"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #cgo pkg-config: gobject-2.0
// #include <stdlib.h>
// #include <glib.h>
// #include <glib-object.h>
import "C"

// GType values.
var (
	GTypeCellRendererPixbuf = coreglib.Type(girepository.MustFind("Gtk", "CellRendererPixbuf").RegisteredGType())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeCellRendererPixbuf, F: marshalCellRendererPixbuf},
	})
}

// CellRendererPixbufOverrides contains methods that are overridable.
type CellRendererPixbufOverrides struct {
}

func defaultCellRendererPixbufOverrides(v *CellRendererPixbuf) CellRendererPixbufOverrides {
	return CellRendererPixbufOverrides{}
}

// CellRendererPixbuf can be used to render an image in a cell. It allows to
// render either a given Pixbuf (set via the CellRendererPixbuf:pixbuf property)
// or a named icon (set via the CellRendererPixbuf:icon-name property).
//
// To support the tree view, CellRendererPixbuf also supports rendering two
// alternative pixbufs, when the CellRenderer:is-expander property is TRUE. If
// the CellRenderer:is-expanded property is TRUE and the
// CellRendererPixbuf:pixbuf-expander-open property is set to a pixbuf, it
// renders that pixbuf, if the CellRenderer:is-expanded property is FALSE and
// the CellRendererPixbuf:pixbuf-expander-closed property is set to a pixbuf, it
// renders that one.
type CellRendererPixbuf struct {
	_ [0]func() // equal guard
	CellRenderer
}

var (
	_ CellRendererer = (*CellRendererPixbuf)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*CellRendererPixbuf, *CellRendererPixbufClass, CellRendererPixbufOverrides](
		GTypeCellRendererPixbuf,
		initCellRendererPixbufClass,
		wrapCellRendererPixbuf,
		defaultCellRendererPixbufOverrides,
	)
}

func initCellRendererPixbufClass(gclass unsafe.Pointer, overrides CellRendererPixbufOverrides, classInitFunc func(*CellRendererPixbufClass)) {
	if classInitFunc != nil {
		class := (*CellRendererPixbufClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapCellRendererPixbuf(obj *coreglib.Object) *CellRendererPixbuf {
	return &CellRendererPixbuf{
		CellRenderer: CellRenderer{
			InitiallyUnowned: coreglib.InitiallyUnowned{
				Object: obj,
			},
		},
	}
}

func marshalCellRendererPixbuf(p uintptr) (interface{}, error) {
	return wrapCellRendererPixbuf(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// CellRendererPixbufClass: instance of this type is always passed by reference.
type CellRendererPixbufClass struct {
	*cellRendererPixbufClass
}

// cellRendererPixbufClass is the struct that's finalized.
type cellRendererPixbufClass struct {
	native unsafe.Pointer
}

var GIRInfoCellRendererPixbufClass = girepository.MustFind("Gtk", "CellRendererPixbufClass")
