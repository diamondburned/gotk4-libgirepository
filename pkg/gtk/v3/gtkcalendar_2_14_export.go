// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gbox"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #cgo pkg-config: gobject-2.0
// #include <stdlib.h>
// #include <glib.h>
// #include <glib-object.h>
import "C"

//export _gotk4_gtk3_CalendarDetailFunc
func _gotk4_gtk3_CalendarDetailFunc(arg1 *C.void, arg2 C.guint, arg3 C.guint, arg4 C.guint, arg5 C.gpointer) (cret *C.gchar) {
	var fn CalendarDetailFunc
	{
		v := gbox.Get(uintptr(arg5))
		if v == nil {
			panic(`callback not found`)
		}
		fn = v.(CalendarDetailFunc)
	}

	var _calendar *Calendar // out
	var _year uint          // out
	var _month uint         // out
	var _day uint           // out

	_calendar = wrapCalendar(coreglib.Take(unsafe.Pointer(arg1)))
	_year = uint(arg2)
	_month = uint(arg3)
	_day = uint(arg4)

	utf8 := fn(_calendar, _year, _month, _day)

	var _ string

	if utf8 != "" {
		cret = (*C.gchar)(unsafe.Pointer(C.CString(utf8)))
	}

	return cret
}
