// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/girepository"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #cgo pkg-config: gobject-2.0
// #include <stdlib.h>
// #include <glib.h>
// #include <glib-object.h>
// extern void _gotk4_gtk3_GestureStylus_ConnectUp(gpointer, gdouble, gdouble, guintptr);
// extern void _gotk4_gtk3_GestureStylus_ConnectProximity(gpointer, gdouble, gdouble, guintptr);
// extern void _gotk4_gtk3_GestureStylus_ConnectMotion(gpointer, gdouble, gdouble, guintptr);
// extern void _gotk4_gtk3_GestureStylus_ConnectDown(gpointer, gdouble, gdouble, guintptr);
import "C"

// GType values.
var (
	GTypeGestureStylus = coreglib.Type(girepository.MustFind("Gtk", "GestureStylus").RegisteredGType())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeGestureStylus, F: marshalGestureStylus},
	})
}

// GestureStylus is a Gesture implementation specific to stylus input. The
// provided signals just provide the basic information.
type GestureStylus struct {
	_ [0]func() // equal guard
	GestureSingle
}

var (
	_ Gesturer = (*GestureStylus)(nil)
)

func wrapGestureStylus(obj *coreglib.Object) *GestureStylus {
	return &GestureStylus{
		GestureSingle: GestureSingle{
			Gesture: Gesture{
				EventController: EventController{
					Object: obj,
				},
			},
		},
	}
}

func marshalGestureStylus(p uintptr) (interface{}, error) {
	return wrapGestureStylus(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

func (v *GestureStylus) ConnectDown(f func(object, p0 float64)) coreglib.SignalHandle {
	return coreglib.ConnectGeneratedClosure(v, "down", false, unsafe.Pointer(C._gotk4_gtk3_GestureStylus_ConnectDown), f)
}

func (v *GestureStylus) ConnectMotion(f func(object, p0 float64)) coreglib.SignalHandle {
	return coreglib.ConnectGeneratedClosure(v, "motion", false, unsafe.Pointer(C._gotk4_gtk3_GestureStylus_ConnectMotion), f)
}

func (v *GestureStylus) ConnectProximity(f func(object, p0 float64)) coreglib.SignalHandle {
	return coreglib.ConnectGeneratedClosure(v, "proximity", false, unsafe.Pointer(C._gotk4_gtk3_GestureStylus_ConnectProximity), f)
}

func (v *GestureStylus) ConnectUp(f func(object, p0 float64)) coreglib.SignalHandle {
	return coreglib.ConnectGeneratedClosure(v, "up", false, unsafe.Pointer(C._gotk4_gtk3_GestureStylus_ConnectUp), f)
}
