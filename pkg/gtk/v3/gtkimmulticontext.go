// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	"github.com/diamondburned/gotk4/pkg/core/girepository"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #cgo pkg-config: gobject-2.0
// #include <stdlib.h>
// #include <glib.h>
// #include <glib-object.h>
import "C"

// GType values.
var (
	GTypeIMMulticontext = coreglib.Type(girepository.MustFind("Gtk", "IMMulticontext").RegisteredGType())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeIMMulticontext, F: marshalIMMulticontext},
	})
}

// IMMulticontextOverrides contains methods that are overridable.
type IMMulticontextOverrides struct {
}

func defaultIMMulticontextOverrides(v *IMMulticontext) IMMulticontextOverrides {
	return IMMulticontextOverrides{}
}

type IMMulticontext struct {
	_ [0]func() // equal guard
	IMContext
}

var (
	_ IMContexter = (*IMMulticontext)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*IMMulticontext, *IMMulticontextClass, IMMulticontextOverrides](
		GTypeIMMulticontext,
		initIMMulticontextClass,
		wrapIMMulticontext,
		defaultIMMulticontextOverrides,
	)
}

func initIMMulticontextClass(gclass unsafe.Pointer, overrides IMMulticontextOverrides, classInitFunc func(*IMMulticontextClass)) {
	if classInitFunc != nil {
		class := (*IMMulticontextClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapIMMulticontext(obj *coreglib.Object) *IMMulticontext {
	return &IMMulticontext{
		IMContext: IMContext{
			Object: obj,
		},
	}
}

func marshalIMMulticontext(p uintptr) (interface{}, error) {
	return wrapIMMulticontext(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// IMMulticontextClass: instance of this type is always passed by reference.
type IMMulticontextClass struct {
	*imMulticontextClass
}

// imMulticontextClass is the struct that's finalized.
type imMulticontextClass struct {
	native unsafe.Pointer
}

var GIRInfoIMMulticontextClass = girepository.MustFind("Gtk", "IMMulticontextClass")
