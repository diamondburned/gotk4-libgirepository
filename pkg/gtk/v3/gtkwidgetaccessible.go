// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/atk"
	"github.com/diamondburned/gotk4/pkg/core/gextras"
	"github.com/diamondburned/gotk4/pkg/core/girepository"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #cgo pkg-config: gobject-2.0
// #include <stdlib.h>
// #include <glib.h>
// #include <glib-object.h>
import "C"

// GType values.
var (
	GTypeWidgetAccessible = coreglib.Type(girepository.MustFind("Gtk", "WidgetAccessible").RegisteredGType())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeWidgetAccessible, F: marshalWidgetAccessible},
	})
}

// WidgetAccessibleOverrides contains methods that are overridable.
type WidgetAccessibleOverrides struct {
}

func defaultWidgetAccessibleOverrides(v *WidgetAccessible) WidgetAccessibleOverrides {
	return WidgetAccessibleOverrides{}
}

type WidgetAccessible struct {
	_ [0]func() // equal guard
	Accessible

	atk.Component
}

var (
	_ coreglib.Objector = (*WidgetAccessible)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*WidgetAccessible, *WidgetAccessibleClass, WidgetAccessibleOverrides](
		GTypeWidgetAccessible,
		initWidgetAccessibleClass,
		wrapWidgetAccessible,
		defaultWidgetAccessibleOverrides,
	)
}

func initWidgetAccessibleClass(gclass unsafe.Pointer, overrides WidgetAccessibleOverrides, classInitFunc func(*WidgetAccessibleClass)) {
	if classInitFunc != nil {
		class := (*WidgetAccessibleClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapWidgetAccessible(obj *coreglib.Object) *WidgetAccessible {
	return &WidgetAccessible{
		Accessible: Accessible{
			AtkObject: atk.AtkObject{
				Object: obj,
			},
		},
		Component: atk.Component{
			Object: obj,
		},
	}
}

func marshalWidgetAccessible(p uintptr) (interface{}, error) {
	return wrapWidgetAccessible(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// WidgetAccessibleClass: instance of this type is always passed by reference.
type WidgetAccessibleClass struct {
	*widgetAccessibleClass
}

// widgetAccessibleClass is the struct that's finalized.
type widgetAccessibleClass struct {
	native unsafe.Pointer
}

var GIRInfoWidgetAccessibleClass = girepository.MustFind("Gtk", "WidgetAccessibleClass")
