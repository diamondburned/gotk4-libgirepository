// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/atk"
	"github.com/diamondburned/gotk4/pkg/core/gextras"
	"github.com/diamondburned/gotk4/pkg/core/girepository"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #cgo pkg-config: gobject-2.0
// #include <stdlib.h>
// #include <glib.h>
// #include <glib-object.h>
import "C"

// GType values.
var (
	GTypeNotebookPageAccessible = coreglib.Type(girepository.MustFind("Gtk", "NotebookPageAccessible").RegisteredGType())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeNotebookPageAccessible, F: marshalNotebookPageAccessible},
	})
}

// NotebookPageAccessibleOverrides contains methods that are overridable.
type NotebookPageAccessibleOverrides struct {
}

func defaultNotebookPageAccessibleOverrides(v *NotebookPageAccessible) NotebookPageAccessibleOverrides {
	return NotebookPageAccessibleOverrides{}
}

type NotebookPageAccessible struct {
	_ [0]func() // equal guard
	atk.AtkObject

	*coreglib.Object
	atk.Component
}

var (
	_ coreglib.Objector = (*NotebookPageAccessible)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*NotebookPageAccessible, *NotebookPageAccessibleClass, NotebookPageAccessibleOverrides](
		GTypeNotebookPageAccessible,
		initNotebookPageAccessibleClass,
		wrapNotebookPageAccessible,
		defaultNotebookPageAccessibleOverrides,
	)
}

func initNotebookPageAccessibleClass(gclass unsafe.Pointer, overrides NotebookPageAccessibleOverrides, classInitFunc func(*NotebookPageAccessibleClass)) {
	if classInitFunc != nil {
		class := (*NotebookPageAccessibleClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapNotebookPageAccessible(obj *coreglib.Object) *NotebookPageAccessible {
	return &NotebookPageAccessible{
		AtkObject: atk.AtkObject{
			Object: obj,
		},
		Object: obj,
		Component: atk.Component{
			Object: obj,
		},
	}
}

func marshalNotebookPageAccessible(p uintptr) (interface{}, error) {
	return wrapNotebookPageAccessible(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// NotebookPageAccessibleClass: instance of this type is always passed by
// reference.
type NotebookPageAccessibleClass struct {
	*notebookPageAccessibleClass
}

// notebookPageAccessibleClass is the struct that's finalized.
type notebookPageAccessibleClass struct {
	native unsafe.Pointer
}

var GIRInfoNotebookPageAccessibleClass = girepository.MustFind("Gtk", "NotebookPageAccessibleClass")
