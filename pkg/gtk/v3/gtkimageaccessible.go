// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/atk"
	"github.com/diamondburned/gotk4/pkg/core/gextras"
	"github.com/diamondburned/gotk4/pkg/core/girepository"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #cgo pkg-config: gobject-2.0
// #include <stdlib.h>
// #include <glib.h>
// #include <glib-object.h>
import "C"

// GType values.
var (
	GTypeImageAccessible = coreglib.Type(girepository.MustFind("Gtk", "ImageAccessible").RegisteredGType())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeImageAccessible, F: marshalImageAccessible},
	})
}

// ImageAccessibleOverrides contains methods that are overridable.
type ImageAccessibleOverrides struct {
}

func defaultImageAccessibleOverrides(v *ImageAccessible) ImageAccessibleOverrides {
	return ImageAccessibleOverrides{}
}

type ImageAccessible struct {
	_ [0]func() // equal guard
	WidgetAccessible

	atk.Image
}

var (
	_ coreglib.Objector = (*ImageAccessible)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*ImageAccessible, *ImageAccessibleClass, ImageAccessibleOverrides](
		GTypeImageAccessible,
		initImageAccessibleClass,
		wrapImageAccessible,
		defaultImageAccessibleOverrides,
	)
}

func initImageAccessibleClass(gclass unsafe.Pointer, overrides ImageAccessibleOverrides, classInitFunc func(*ImageAccessibleClass)) {
	if classInitFunc != nil {
		class := (*ImageAccessibleClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapImageAccessible(obj *coreglib.Object) *ImageAccessible {
	return &ImageAccessible{
		WidgetAccessible: WidgetAccessible{
			Accessible: Accessible{
				AtkObject: atk.AtkObject{
					Object: obj,
				},
			},
			Component: atk.Component{
				Object: obj,
			},
		},
		Image: atk.Image{
			Object: obj,
		},
	}
}

func marshalImageAccessible(p uintptr) (interface{}, error) {
	return wrapImageAccessible(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// ImageAccessibleClass: instance of this type is always passed by reference.
type ImageAccessibleClass struct {
	*imageAccessibleClass
}

// imageAccessibleClass is the struct that's finalized.
type imageAccessibleClass struct {
	native unsafe.Pointer
}

var GIRInfoImageAccessibleClass = girepository.MustFind("Gtk", "ImageAccessibleClass")
