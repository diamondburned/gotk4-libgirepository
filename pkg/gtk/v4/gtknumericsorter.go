// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	"github.com/diamondburned/gotk4/pkg/core/girepository"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #cgo pkg-config: gobject-2.0
// #include <stdlib.h>
// #include <glib.h>
// #include <glib-object.h>
import "C"

// GType values.
var (
	GTypeNumericSorter = coreglib.Type(girepository.MustFind("Gtk", "NumericSorter").RegisteredGType())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeNumericSorter, F: marshalNumericSorter},
	})
}

// NumericSorterOverrides contains methods that are overridable.
type NumericSorterOverrides struct {
}

func defaultNumericSorterOverrides(v *NumericSorter) NumericSorterOverrides {
	return NumericSorterOverrides{}
}

// NumericSorter: GtkNumericSorter is a GtkSorter that compares numbers.
//
// To obtain the numbers to compare, this sorter evaluates a gtk.Expression.
type NumericSorter struct {
	_ [0]func() // equal guard
	Sorter
}

var (
	_ coreglib.Objector = (*NumericSorter)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*NumericSorter, *NumericSorterClass, NumericSorterOverrides](
		GTypeNumericSorter,
		initNumericSorterClass,
		wrapNumericSorter,
		defaultNumericSorterOverrides,
	)
}

func initNumericSorterClass(gclass unsafe.Pointer, overrides NumericSorterOverrides, classInitFunc func(*NumericSorterClass)) {
	if classInitFunc != nil {
		class := (*NumericSorterClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapNumericSorter(obj *coreglib.Object) *NumericSorter {
	return &NumericSorter{
		Sorter: Sorter{
			Object: obj,
		},
	}
}

func marshalNumericSorter(p uintptr) (interface{}, error) {
	return wrapNumericSorter(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// NumericSorterClass: instance of this type is always passed by reference.
type NumericSorterClass struct {
	*numericSorterClass
}

// numericSorterClass is the struct that's finalized.
type numericSorterClass struct {
	native unsafe.Pointer
}

var GIRInfoNumericSorterClass = girepository.MustFind("Gtk", "NumericSorterClass")
