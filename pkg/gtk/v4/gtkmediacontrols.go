// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	"github.com/diamondburned/gotk4/pkg/core/girepository"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #cgo pkg-config: gobject-2.0
// #include <stdlib.h>
// #include <glib.h>
// #include <glib-object.h>
import "C"

// GType values.
var (
	GTypeMediaControls = coreglib.Type(girepository.MustFind("Gtk", "MediaControls").RegisteredGType())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeMediaControls, F: marshalMediaControls},
	})
}

// MediaControlsOverrides contains methods that are overridable.
type MediaControlsOverrides struct {
}

func defaultMediaControlsOverrides(v *MediaControls) MediaControlsOverrides {
	return MediaControlsOverrides{}
}

// MediaControls: GtkMediaControls is a widget to show controls for a video.
//
// !An example GtkMediaControls (media-controls.png)
//
// Usually, GtkMediaControls is used as part of gtk.Video.
type MediaControls struct {
	_ [0]func() // equal guard
	Widget
}

var (
	_ Widgetter = (*MediaControls)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*MediaControls, *MediaControlsClass, MediaControlsOverrides](
		GTypeMediaControls,
		initMediaControlsClass,
		wrapMediaControls,
		defaultMediaControlsOverrides,
	)
}

func initMediaControlsClass(gclass unsafe.Pointer, overrides MediaControlsOverrides, classInitFunc func(*MediaControlsClass)) {
	if classInitFunc != nil {
		class := (*MediaControlsClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapMediaControls(obj *coreglib.Object) *MediaControls {
	return &MediaControls{
		Widget: Widget{
			InitiallyUnowned: coreglib.InitiallyUnowned{
				Object: obj,
			},
			Object: obj,
			Accessible: Accessible{
				Object: obj,
			},
			Buildable: Buildable{
				Object: obj,
			},
			ConstraintTarget: ConstraintTarget{
				Object: obj,
			},
		},
	}
}

func marshalMediaControls(p uintptr) (interface{}, error) {
	return wrapMediaControls(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// MediaControlsClass: instance of this type is always passed by reference.
type MediaControlsClass struct {
	*mediaControlsClass
}

// mediaControlsClass is the struct that's finalized.
type mediaControlsClass struct {
	native unsafe.Pointer
}

var GIRInfoMediaControlsClass = girepository.MustFind("Gtk", "MediaControlsClass")
