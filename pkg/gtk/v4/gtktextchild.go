// Code generated by girgen. DO NOT EDIT.

package gtk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	"github.com/diamondburned/gotk4/pkg/core/girepository"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #cgo pkg-config: gobject-2.0
// #include <stdlib.h>
// #include <glib.h>
// #include <glib-object.h>
import "C"

// GType values.
var (
	GTypeTextChildAnchor = coreglib.Type(girepository.MustFind("Gtk", "TextChildAnchor").RegisteredGType())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeTextChildAnchor, F: marshalTextChildAnchor},
	})
}

// TextChildAnchorOverrides contains methods that are overridable.
type TextChildAnchorOverrides struct {
}

func defaultTextChildAnchorOverrides(v *TextChildAnchor) TextChildAnchorOverrides {
	return TextChildAnchorOverrides{}
}

// TextChildAnchor: GtkTextChildAnchor is a spot in a GtkTextBuffer where child
// widgets can be “anchored”.
//
// The anchor can have multiple widgets anchored, to allow for multiple views.
type TextChildAnchor struct {
	_ [0]func() // equal guard
	*coreglib.Object
}

var (
	_ coreglib.Objector = (*TextChildAnchor)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*TextChildAnchor, *TextChildAnchorClass, TextChildAnchorOverrides](
		GTypeTextChildAnchor,
		initTextChildAnchorClass,
		wrapTextChildAnchor,
		defaultTextChildAnchorOverrides,
	)
}

func initTextChildAnchorClass(gclass unsafe.Pointer, overrides TextChildAnchorOverrides, classInitFunc func(*TextChildAnchorClass)) {
	if classInitFunc != nil {
		class := (*TextChildAnchorClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapTextChildAnchor(obj *coreglib.Object) *TextChildAnchor {
	return &TextChildAnchor{
		Object: obj,
	}
}

func marshalTextChildAnchor(p uintptr) (interface{}, error) {
	return wrapTextChildAnchor(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// TextChildAnchorClass: instance of this type is always passed by reference.
type TextChildAnchorClass struct {
	*textChildAnchorClass
}

// textChildAnchorClass is the struct that's finalized.
type textChildAnchorClass struct {
	native unsafe.Pointer
}

var GIRInfoTextChildAnchorClass = girepository.MustFind("Gtk", "TextChildAnchorClass")
