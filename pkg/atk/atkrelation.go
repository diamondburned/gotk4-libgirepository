// Code generated by girgen. DO NOT EDIT.

package atk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	"github.com/diamondburned/gotk4/pkg/core/girepository"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #cgo pkg-config: gobject-2.0
// #include <stdlib.h>
// #include <glib.h>
// #include <glib-object.h>
import "C"

// GType values.
var (
	GTypeRelation = coreglib.Type(girepository.MustFind("Atk", "Relation").RegisteredGType())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeRelation, F: marshalRelation},
	})
}

// RelationOverrides contains methods that are overridable.
type RelationOverrides struct {
}

func defaultRelationOverrides(v *Relation) RelationOverrides {
	return RelationOverrides{}
}

// Relation describes a relation between an object and one or more other
// objects. The actual relations that an object has with other objects are
// defined as an AtkRelationSet, which is a set of AtkRelations.
type Relation struct {
	_ [0]func() // equal guard
	*coreglib.Object
}

var (
	_ coreglib.Objector = (*Relation)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*Relation, *RelationClass, RelationOverrides](
		GTypeRelation,
		initRelationClass,
		wrapRelation,
		defaultRelationOverrides,
	)
}

func initRelationClass(gclass unsafe.Pointer, overrides RelationOverrides, classInitFunc func(*RelationClass)) {
	if classInitFunc != nil {
		class := (*RelationClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapRelation(obj *coreglib.Object) *Relation {
	return &Relation{
		Object: obj,
	}
}

func marshalRelation(p uintptr) (interface{}, error) {
	return wrapRelation(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// RelationClass: instance of this type is always passed by reference.
type RelationClass struct {
	*relationClass
}

// relationClass is the struct that's finalized.
type relationClass struct {
	native unsafe.Pointer
}

var GIRInfoRelationClass = girepository.MustFind("Atk", "RelationClass")
