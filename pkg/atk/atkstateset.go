// Code generated by girgen. DO NOT EDIT.

package atk

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
	"github.com/diamondburned/gotk4/pkg/core/girepository"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #cgo pkg-config: gobject-2.0
// #include <stdlib.h>
// #include <glib.h>
// #include <glib-object.h>
import "C"

// GType values.
var (
	GTypeStateSet = coreglib.Type(girepository.MustFind("Atk", "StateSet").RegisteredGType())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeStateSet, F: marshalStateSet},
	})
}

// StateSetOverrides contains methods that are overridable.
type StateSetOverrides struct {
}

func defaultStateSetOverrides(v *StateSet) StateSetOverrides {
	return StateSetOverrides{}
}

// StateSet is a read-only representation of the full set of States that apply
// to an object at a given time. This set is not meant to be modified, but
// rather created when #atk_object_ref_state_set() is called.
type StateSet struct {
	_ [0]func() // equal guard
	*coreglib.Object
}

var (
	_ coreglib.Objector = (*StateSet)(nil)
)

func init() {
	coreglib.RegisterClassInfo[*StateSet, *StateSetClass, StateSetOverrides](
		GTypeStateSet,
		initStateSetClass,
		wrapStateSet,
		defaultStateSetOverrides,
	)
}

func initStateSetClass(gclass unsafe.Pointer, overrides StateSetOverrides, classInitFunc func(*StateSetClass)) {
	if classInitFunc != nil {
		class := (*StateSetClass)(gextras.NewStructNative(gclass))
		classInitFunc(class)
	}
}

func wrapStateSet(obj *coreglib.Object) *StateSet {
	return &StateSet{
		Object: obj,
	}
}

func marshalStateSet(p uintptr) (interface{}, error) {
	return wrapStateSet(coreglib.ValueFromNative(unsafe.Pointer(p)).Object()), nil
}

// StateSetClass: instance of this type is always passed by reference.
type StateSetClass struct {
	*stateSetClass
}

// stateSetClass is the struct that's finalized.
type stateSetClass struct {
	native unsafe.Pointer
}

var GIRInfoStateSetClass = girepository.MustFind("Atk", "StateSetClass")
