// Code generated by girgen. DO NOT EDIT.

package atk

import (
	"unsafe"

	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #cgo pkg-config: gobject-2.0
// #include <stdlib.h>
// #include <glib.h>
// #include <glib-object.h>
import "C"

//export _gotk4_atk1_Text_ConnectTextAttributesChanged
func _gotk4_atk1_Text_ConnectTextAttributesChanged(arg0 C.gpointer, arg1 C.guintptr) {
	var f func()
	{
		closure := coreglib.ConnectedGeneratedClosure(uintptr(arg1))
		if closure == nil {
			panic("given unknown closure user_data")
		}
		defer closure.TryRepanic()

		f = closure.Func.(func())
	}

	f()
}

//export _gotk4_atk1_Text_ConnectTextCaretMoved
func _gotk4_atk1_Text_ConnectTextCaretMoved(arg0 C.gpointer, arg1 C.gint, arg2 C.guintptr) {
	var f func(arg1 int)
	{
		closure := coreglib.ConnectedGeneratedClosure(uintptr(arg2))
		if closure == nil {
			panic("given unknown closure user_data")
		}
		defer closure.TryRepanic()

		f = closure.Func.(func(arg1 int))
	}

	var _arg1 int // out

	_arg1 = int(arg1)

	f(_arg1)
}

//export _gotk4_atk1_Text_ConnectTextChanged
func _gotk4_atk1_Text_ConnectTextChanged(arg0 C.gpointer, arg1 C.gint, arg2 C.gint, arg3 C.guintptr) {
	var f func(arg1, arg2 int)
	{
		closure := coreglib.ConnectedGeneratedClosure(uintptr(arg3))
		if closure == nil {
			panic("given unknown closure user_data")
		}
		defer closure.TryRepanic()

		f = closure.Func.(func(arg1, arg2 int))
	}

	var _arg1 int // out
	var _arg2 int // out

	_arg1 = int(arg1)
	_arg2 = int(arg2)

	f(_arg1, _arg2)
}

//export _gotk4_atk1_Text_ConnectTextInsert
func _gotk4_atk1_Text_ConnectTextInsert(arg0 C.gpointer, arg1 C.gint, arg2 C.gint, arg3 *C.gchar, arg4 C.guintptr) {
	var f func(arg1, arg2 int, arg3 string)
	{
		closure := coreglib.ConnectedGeneratedClosure(uintptr(arg4))
		if closure == nil {
			panic("given unknown closure user_data")
		}
		defer closure.TryRepanic()

		f = closure.Func.(func(arg1, arg2 int, arg3 string))
	}

	var _arg1 int    // out
	var _arg2 int    // out
	var _arg3 string // out

	_arg1 = int(arg1)
	_arg2 = int(arg2)
	_arg3 = C.GoString((*C.gchar)(unsafe.Pointer(arg3)))

	f(_arg1, _arg2, _arg3)
}

//export _gotk4_atk1_Text_ConnectTextRemove
func _gotk4_atk1_Text_ConnectTextRemove(arg0 C.gpointer, arg1 C.gint, arg2 C.gint, arg3 *C.gchar, arg4 C.guintptr) {
	var f func(arg1, arg2 int, arg3 string)
	{
		closure := coreglib.ConnectedGeneratedClosure(uintptr(arg4))
		if closure == nil {
			panic("given unknown closure user_data")
		}
		defer closure.TryRepanic()

		f = closure.Func.(func(arg1, arg2 int, arg3 string))
	}

	var _arg1 int    // out
	var _arg2 int    // out
	var _arg3 string // out

	_arg1 = int(arg1)
	_arg2 = int(arg2)
	_arg3 = C.GoString((*C.gchar)(unsafe.Pointer(arg3)))

	f(_arg1, _arg2, _arg3)
}

//export _gotk4_atk1_Text_ConnectTextSelectionChanged
func _gotk4_atk1_Text_ConnectTextSelectionChanged(arg0 C.gpointer, arg1 C.guintptr) {
	var f func()
	{
		closure := coreglib.ConnectedGeneratedClosure(uintptr(arg1))
		if closure == nil {
			panic("given unknown closure user_data")
		}
		defer closure.TryRepanic()

		f = closure.Func.(func())
	}

	f()
}
