// Code generated by girgen. DO NOT EDIT.

package pango

import (
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/girepository"
	coreglib "github.com/diamondburned/gotk4/pkg/core/glib"
)

// #cgo pkg-config: gobject-2.0
// #include <stdlib.h>
// #include <glib.h>
// #include <glib-object.h>
import "C"

// GType values.
var (
	GTypeLanguage = coreglib.Type(girepository.MustFind("Pango", "Language").RegisteredGType())
)

func init() {
	coreglib.RegisterGValueMarshalers([]coreglib.TypeMarshaler{
		coreglib.TypeMarshaler{T: GTypeLanguage, F: marshalLanguage},
	})
}

// Language: PangoLanguage structure is used to represent a language.
//
// PangoLanguage pointers can be efficiently copied and compared with each
// other.
//
// An instance of this type is always passed by reference.
type Language struct {
	*language
}

// language is the struct that's finalized.
type language struct {
	native unsafe.Pointer
}

var GIRInfoLanguage = girepository.MustFind("Pango", "Language")

func marshalLanguage(p uintptr) (interface{}, error) {
	b := coreglib.ValueFromNative(unsafe.Pointer(p)).Boxed()
	return &Language{&language{(unsafe.Pointer)(b)}}, nil
}
